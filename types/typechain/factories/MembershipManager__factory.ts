/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MembershipManager,
  MembershipManagerInterface,
} from "../MembershipManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_urlBase",
        type: "string",
      },
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "NewManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getAddressForId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getIdForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mintWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "revokeMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "transferWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newUrlBase",
        type: "string",
      },
    ],
    name: "updateUrlBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001522380380620015228339810160408190526200003491620001b7565b6200003f33620000a4565b815162000054906004906020850190620000f4565b50600580546001600160a01b0319166001600160a01b0383169081179091556040517f5589a1df7a257347b14b97cb6fe06862c960ff64e9a0c2908632929098bb013090600090a25050620002f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010290620002a2565b90600052602060002090601f01602090048101928262000126576000855562000171565b82601f106200014157805160ff191683800117855562000171565b8280016001018555821562000171579182015b828111156200017157825182559160200191906001019062000154565b506200017f92915062000183565b5090565b5b808211156200017f576000815560010162000184565b80516001600160a01b0381168114620001b257600080fd5b919050565b60008060408385031215620001ca578182fd5b82516001600160401b0380821115620001e1578384fd5b818501915085601f830112620001f5578384fd5b8151818111156200020a576200020a620002df565b604051601f8201601f19908116603f01168101908382118183101715620002355762000235620002df565b8160405282815260209350888484870101111562000251578687fd5b8691505b8282101562000274578482018401518183018501529083019062000255565b828211156200028557868484830101525b9550620002979150508582016200019a565b925050509250929050565b600181811c90821680620002b757607f821691505b60208210811415620002d957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61121d80620003056000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063c87b56dd11610066578063c87b56dd146101c1578063d0ebdbe7146101e1578063ebd3828e146101f4578063f2fde38b1461021d57600080fd5b80638da5cb5b14610152578063a8696a9614610177578063c5ae086a146101ae57600080fd5b806301ffc9a7146100d457806302d9e696146100fc5780631342c3ee1461011157806350a423c2146101245780636a62784214610137578063715018a61461014a575b600080fd5b6100e76100e2366004610ecd565b610230565b60405190151581526020015b60405180910390f35b61010f61010a366004610ef5565b610282565b005b61010f61011f366004610e16565b6102cc565b61010f610132366004610dde565b610416565b61010f610145366004610d90565b6104bf565b61010f6104f5565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100f3565b6101a0610185366004610d90565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100f3565b61010f6101bc366004610d90565b61052b565b6101d46101cf366004610f3b565b6105be565b6040516100f39190611025565b61010f6101ef366004610d90565b6105f2565b61015f610202366004610f3b565b6000908152600360205260409020546001600160a01b031690565b61010f61022b366004610d90565b610666565b60006301ffc9a760e01b6001600160e01b03198316148061026157506001600160e01b031982166380ac58cd60e01b145b8061027c57506001600160e01b03198216635b5e139f60e01b145b92915050565b6000546001600160a01b031633146102b55760405162461bcd60e51b81526004016102ac9061107e565b60405180910390fd5b80516102c8906004906020840190610c81565b5050565b6000806102db84860186610db3565b91509150804311156103215760405162461bcd60e51b815260206004820152600f60248201526e111958591b1a5b99481c185cdcd959608a1b60448201526064016102ac565b856001600160a01b0316826001600160a01b03161461037b5760405162461bcd60e51b8152602060048201526016602482015275082c8c8e4cae6e640c8decae640dcdee840dac2e8c6d60531b60448201526064016102ac565b6000858560405161038d929190610f6f565b6040518091039020905060006103a382866106fe565b6005549091506001600160a01b038083169116146104035760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79207369676e6564206d616e616765722061646472657373000000000060448201526064016102ac565b61040c88610722565b5050505050505050565b6005546001600160a01b031633146104405760405162461bcd60e51b81526004016102ac90611058565b6001600160a01b0382811660008181526002602081815260408084208054908590558085526003835281852080546001600160a01b0319169789169788179055868552929091528083208290555190938493909290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a4505050565b6005546001600160a01b031633146104e95760405162461bcd60e51b81526004016102ac90611058565b6104f281610722565b50565b6000546001600160a01b0316331461051f5760405162461bcd60e51b81526004016102ac9061107e565b6105296000610782565b565b6005546001600160a01b031633146105555760405162461bcd60e51b81526004016102ac90611058565b6001600160a01b0381166000818152600260209081526040808320805490849055808452600390925280832080546001600160a01b03191690555190928392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b606060046105cb836107d2565b6040516020016105dc929190610f7f565b6040516020818303038152906040529050919050565b6000546001600160a01b0316331461061c5760405162461bcd60e51b81526004016102ac9061107e565b600580546001600160a01b0319166001600160a01b0383169081179091556040517f5589a1df7a257347b14b97cb6fe06862c960ff64e9a0c2908632929098bb013090600090a250565b6000546001600160a01b031633146106905760405162461bcd60e51b81526004016102ac9061107e565b6001600160a01b0381166106f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ac565b6104f281610782565b600080600061070d85856108f4565b9150915061071a81610964565b509392505050565b6001600160a01b0381166000908152600660205260409020805460ff19166001908117909155546040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816107f65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610820578061080a81611161565b91506108199050600a836110cb565b91506107fa565b60008167ffffffffffffffff81111561084957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610873576020820181803683370190505b5090505b84156108ec576108886001836110df565b9150610895600a8661117c565b6108a09060306110b3565b60f81b8183815181106108c357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506108e5600a866110cb565b9450610877565b949350505050565b60008082516041141561092b5760208301516040840151606085015160001a61091f87828585610b65565b9450945050505061095d565b825160401415610955576020830151604084015161094a868383610c52565b93509350505061095d565b506000905060025b9250929050565b600081600481111561098657634e487b7160e01b600052602160045260246000fd5b141561098f5750565b60018160048111156109b157634e487b7160e01b600052602160045260246000fd5b14156109ff5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016102ac565b6002816004811115610a2157634e487b7160e01b600052602160045260246000fd5b1415610a6f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102ac565b6003816004811115610a9157634e487b7160e01b600052602160045260246000fd5b1415610aea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102ac565b6004816004811115610b0c57634e487b7160e01b600052602160045260246000fd5b14156104f25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016102ac565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610b9c5750600090506003610c49565b8460ff16601b14158015610bb457508460ff16601c14155b15610bc55750600090506004610c49565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c19573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c4257600060019250925050610c49565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b01610c7387828885610b65565b935093505050935093915050565b828054610c8d90611126565b90600052602060002090601f016020900481019282610caf5760008555610cf5565b82601f10610cc857805160ff1916838001178555610cf5565b82800160010185558215610cf5579182015b82811115610cf5578251825591602001919060010190610cda565b50610d01929150610d05565b5090565b5b80821115610d015760008155600101610d06565b600067ffffffffffffffff80841115610d3557610d356111bc565b604051601f8501601f19908116603f01168101908282118183101715610d5d57610d5d6111bc565b81604052809350858152868686011115610d7657600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215610da1578081fd5b8135610dac816111d2565b9392505050565b60008060408385031215610dc5578081fd5b8235610dd0816111d2565b946020939093013593505050565b60008060408385031215610df0578182fd5b8235610dfb816111d2565b91506020830135610e0b816111d2565b809150509250929050565b60008060008060608587031215610e2b578182fd5b8435610e36816111d2565b9350602085013567ffffffffffffffff80821115610e52578384fd5b818701915087601f830112610e65578384fd5b813581811115610e73578485fd5b886020828501011115610e84578485fd5b602083019550809450506040870135915080821115610ea1578283fd5b508501601f81018713610eb2578182fd5b610ec187823560208401610d1a565b91505092959194509250565b600060208284031215610ede578081fd5b81356001600160e01b031981168114610dac578182fd5b600060208284031215610f06578081fd5b813567ffffffffffffffff811115610f1c578182fd5b8201601f81018413610f2c578182fd5b6108ec84823560208401610d1a565b600060208284031215610f4c578081fd5b5035919050565b60008151610f658185602086016110f6565b9290920192915050565b8183823760009101908152919050565b600080845482600182811c915080831680610f9b57607f831692505b6020808410821415610fbb57634e487b7160e01b87526022600452602487fd5b818015610fcf5760018114610fe05761100c565b60ff1986168952848901965061100c565b60008b815260209020885b868110156110045781548b820152908501908301610feb565b505084890196505b50505050505061101c8185610f53565b95945050505050565b60208152600082518060208401526110448160408501602087016110f6565b601f01601f19169190910160400192915050565b6020808252600c908201526b27b7363c9036b0b730b3b2b960a11b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156110c6576110c6611190565b500190565b6000826110da576110da6111a6565b500490565b6000828210156110f1576110f1611190565b500390565b60005b838110156111115781810151838201526020016110f9565b83811115611120576000848401525b50505050565b600181811c9082168061113a57607f821691505b6020821081141561115b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561117557611175611190565b5060010190565b60008261118b5761118b6111a6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104f257600080fdfea2646970667358221220ed989f8e4ebea56546d4b9f33716ecba67ecc8b6d617ff3bc3913bc49a76c19064736f6c63430008040033";

export class MembershipManager__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _urlBase: string,
    _manager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MembershipManager> {
    return super.deploy(
      _urlBase,
      _manager,
      overrides || {}
    ) as Promise<MembershipManager>;
  }
  getDeployTransaction(
    _urlBase: string,
    _manager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_urlBase, _manager, overrides || {});
  }
  attach(address: string): MembershipManager {
    return super.attach(address) as MembershipManager;
  }
  connect(signer: Signer): MembershipManager__factory {
    return super.connect(signer) as MembershipManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipManagerInterface {
    return new utils.Interface(_abi) as MembershipManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MembershipManager {
    return new Contract(address, _abi, signerOrProvider) as MembershipManager;
  }
}
